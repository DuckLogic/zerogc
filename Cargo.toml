[package]
name = "zerogc"
description = "Zero overhead tracing garbage collection for rust"
version.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
edition.workspace = true
readme = "README.md"

[dependencies]
scopeguard = "1.1"
inherent = "1"
# Manually included tracing support for third party libraries
# Providing support for these important libraries,
# gives zerogc batteries included support.
indexmap = { version = "1.6", optional = true }
parking_lot = { version = "0.11", optional = true }
arrayvec = { version = "0.7", optional = true }
anyhow = { version = "1", optional = true }
# Serde support (optional)
serde = { version = "1", optional = true, features = ["derive"] }
# Used for macros
zerogc-derive = { path = "libs/derive", version = "0.2.0-alpha.6" }
# Used for the "epsilon" no-op collector
bumpalo = { version = "3", optional = true }
# Used for our custom hashmap
ahash = { version = "0.7.0", default-features = false, optional = true }

[dependencies.hashbrown]
# Hashbrown is used for our custom hashmap implementation
# We also implement Trace regardless
version = "0.11"
optional = true
features = ["raw", "nightly"]

[dev-dependencies]
serde_json = "1"
# Used to test custom hash function
# support for IndexMap
fnv = "1"

[workspace]
resolver = "2"
members = ["libs/*"]

[workspace.package]
version = "0.2.0-alpha.7"
authors = ["Techcable <git+zerogc@techcable.net>"]
repository = "https://github.com/DuckLogic/zerogc"
license = "MIT"
edition = "2018"

[features]
default = ["std"]
# Depend on the standard library (optional)
#
# This implements tracing for most standard library types.
std = ["alloc"]
# Depend on `extern crate alloc` in addition to the Rust `core`
# This is implied by using the standard library (feature="std")
#
# This implements `Trace` for `Box` and collections like `Vec`
alloc = []
